{
  "openapi": "3.1.0",
  "info": {
    "title": "Grid Tariff API",
    "description": "Provides grid tariffs from Swedish DSOs.",
    "version": "0.1.0",
    "contact": {
      "name": "Grid Tariff API",
      "url": "https://github.com/RI-SE/Eltariff-API"
    },
    "license": {
      "name": "Licence",
      "url": "https://github.com/RI-SE/Eltariff-API/blob/main/LICENSE"
    }
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/{v}/tariffs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/VersionInPath"
        }
      ],
      "get": {
        "tags": [
          "Tariff"
        ],
        "operationId": "GetTariffs",
        "summary": "Returns a collection of publicly available tariffs for the DSO without any customer data.",
        "responses": {
          "200": {
            "description": "All publicly available tariffs without any customer data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TariffsResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/{v}/tariffs/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/VersionInPath"
        },
        {
          "$ref": "#/components/parameters/IdInPath"
        }
      ],
      "get": {
        "tags": [
          "Tariff"
        ],
        "operationId": "GetTariffById",
        "summary": "Returns the tariff for the provided id.",
        "responses": {
          "200": {
            "description": "Response with one tariff.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TariffResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/{v}/tariffs/search": {
      "parameters": [
        {
          "$ref": "#/components/parameters/VersionInPath"
        }
      ],
      "post": {
        "tags": [
          "Tariff"
        ],
        "operationId": "SearchTariffs",
        "summary": "Returns a collection of tariffs based on the search criteria and a mapping between the tariffs and search parameters.",
        "requestBody": {
          "description": "Tariffs search parameters.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TariffsSearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tariffs and mapping between tariff and search parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TariffsSearchResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/{v}/prices/{componentId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/VersionInPath"
        },
        {
          "name": "componentId",
          "description": "A price component id.",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "common.schema.json#/definitions/Uuid"
          }
        },
        {
          "name": "duration",
          "in": "query",
          "required": true,
          "schema": {
            "$ref": "time.schema.json#/definitions/Duration"
          },
          "description": "A duration in time that starts at 00:00 (midnight) of the day when the request is made."
        }
      ],
      "get": {
        "tags": [
          "Price"
        ],
        "operationId": "GetPrices",
        "summary": "Returns prices for a price component for a given timeperiod.",
        "responses": {
          "200": {
            "description": "The prices for the provided component id and time period.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PricesResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "parameters": {
      "VersionInPath": {
        "name": "v",
        "description": "Version of the API",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "default": "v0"
        }
      },
      "IdInPath": {
        "name": "id",
        "description": "Unique identifier for an object",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "common.schema.json#/definitions/Uuid"
        }
      }
    },
    "schemas": {
      "TariffsResponse": {
        "type": "object",
        "properties": {
          "tariffs": {
            "type": "array",
            "items": {
              "$ref": "tariff.schema.json#/definitions/Tariff"
            }
          },
          "calendarPatterns": {
            "type": "array",
            "items": {
              "$ref": "time.schema.json#/definitions/CalendarPattern"
            }
          }
        },
        "additionalProperties": false
      },
      "TariffResponse": {
        "type": "object",
        "properties": {
          "tariff": {
            "$ref": "tariff.schema.json#/definitions/Tariff"
          }
        },
        "additionalProperties": false
      },
      "TariffsSearchRequest": {
        "type": "object",
        "properties": {
          "meteringPointIds": {
            "type": "array",
            "description": "List of MPIDs you are the registered owner of as a private person or your company has e legal reason to request in a customer/provider relationship.",
            "items": {
              "$ref": "common.schema.json#/definitions/MeteringPointId"
            }
          }
        },
        "additionalProperties": false
      },
      "TariffsSearchResponse": {
        "type": "object",
        "properties": {
          "tariffs": {
            "type": "array",
            "items": {
              "$ref": "tariff.schema.json#/definitions/Tariff"
            }
          },
          "mappings": {
            "type": "array",
            "items": {
              "$ref": "common.schema.json#/definitions/TariffMapping"
            }
          }
        },
        "additionalProperties": false
      },
      "PricesResponse": {
        "type": "object",
        "properties": {
          "componentPrices": {
            "$ref": "price.schema.json#/definitions/ComponentPrices"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32",
            "description": "HTTP status code of the error."
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable summary of the problem."
          },
          "detail": {
            "type": "string",
            "description": "A detailed message explaining the error."
          },
          "instance": {
            "type": "string",
            "description": "URI reference identifying the specific occurrence of the problem."
          },
          "type": {
            "type": "string",
            "description": "A URI reference that identifies the problem type."
          }
        },
        "required": [
          "status",
          "title",
          "detail"
        ],
        "additionalProperties": false
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "example": {
              "status": 400,
              "title": "Bad Request",
              "detail": "The request object is invalid.",
              "instance": "/v0/endpoint"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "example": {
              "status": 401,
              "title": "Unauthorized",
              "detail": "You do not have access to make this request.",
              "instance": "/v0/endpoint"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "example": {
              "status": 403,
              "title": "Forbidden",
              "detail": "The request you made is not allowed.",
              "instance": "/v0/endpoint"
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "example": {
              "status": 404,
              "title": "Not Found",
              "detail": "The requested resource could not be found.",
              "instance": "/v0/endpoint"
            }
          }
        }
      }
    }
  }
}