{
  "openapi": "3.1.0",
  "info": {
    "title": "Grid Tariff API",
    "description": "Provides grid tariffs from Swedish DSOs.",
    "version": "0.2.0-alpha1",
    "contact": {
      "name": "Grid Tariff API",
      "url": "https://github.com/RI-SE/Eltariff-API"
    },
    "license": {
      "name": "Licence",
      "url": "https://github.com/RI-SE/Eltariff-API/blob/main/LICENSE"
    }
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/{v}/info": {
      "parameters": [
        {
          "$ref": "#/components/parameters/VersionInPath"
        }
      ],
      "get": {
        "tags": [
          "Information"
        ],
        "operationId": "GetInfo",
        "summary": "Get information about the API implementation.",
        "responses": {
          "200": {
            "description": "Information about the API implementation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/{v}/tariffs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/VersionInPath"
        }
      ],
      "get": {
        "tags": [
          "Tariff"
        ],
        "operationId": "GetTariffs",
        "summary": "Get a collection of publicly available tariffs for the DSO without any customer data.",
        "responses": {
          "200": {
            "description": "All publicly available tariffs without any customer data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TariffsResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "501": {
            "$ref": "#/components/responses/NotImplemented"
          }
        }
      }
    },
    "/{v}/tariffs/{id}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/VersionInPath"
        },
        {
          "$ref": "#/components/parameters/IdInPath"
        }
      ],
      "get": {
        "tags": [
          "Tariff"
        ],
        "operationId": "GetTariffById",
        "summary": "Get grid tariff for the provided id.",
        "responses": {
          "200": {
            "description": "Single grid tariff object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TariffResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "501": {
            "$ref": "#/components/responses/NotImplemented"
          }
        }
      }
    },
    "/{v}/tariffs/search": {
      "parameters": [
        {
          "$ref": "#/components/parameters/VersionInPath"
        }
      ],
      "post": {
        "tags": [
          "Tariff"
        ],
        "operationId": "SearchTariffs",
        "summary": "Search for grid tariffs matching provided search parameters.",
        "requestBody": {
          "description": "Search parameters.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TariffsSearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tariffs matching the search criteria and mapping between tariff and search parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TariffsSearchResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "501": {
            "$ref": "#/components/responses/NotImplemented"
          }
        }
      }
    },
    "/{v}/prices/{componentId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/VersionInPath"
        },
        {
          "name": "componentId",
          "description": "A price component id.",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Uuid"
          }
        },
        {
          "name": "duration",
          "in": "query",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Duration"
          },
          "description": "A duration in time that starts at 00:00 (midnight) of the day when the request is made."
        }
      ],
      "get": {
        "tags": [
          "Price"
        ],
        "operationId": "GetPrices",
        "summary": "Returns prices for a price component for a given timeperiod.",
        "responses": {
          "200": {
            "description": "The prices for the provided component id and time period.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PricesResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "501": {
            "$ref": "#/components/responses/NotImplemented"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "parameters": {
      "VersionInPath": {
        "name": "v",
        "description": "Version of the API",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "default": "v0"
        }
      },
      "IdInPath": {
        "name": "id",
        "description": "Unique identifier for an object",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Uuid"
        }
      }
    },
    "schemas": {
      "InfoResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the implemented API.",
            "default": "Grid Tariff API"
          },
          "apiVersion": {
            "type": "string",
            "description": "Version of the implemented API specification.",
            "example": "1.2.3"
          },
          "implementationVersion": {
            "type": "string",
            "description": "Version of the implementation. The format is set by the operator and can differ. In this example -r4 is the revision number of the implementation and the first three numbers the API version.",
            "example": "1.2.3-r4"
          },
          "operator": {
            "type": "string",
            "description": "Name of the company or organization operating this server.",
            "example": "Grid Company AB"
          },
          "lastUpdated": {
            "description": "Timestamp for deployment of the last release.",
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": true
      },
      "TariffsResponse": {
        "type": "object",
        "properties": {
          "tariffs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tariff"
            }
          },
          "calendarPatterns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CalendarPattern"
            }
          }
        },
        "additionalProperties": false
      },
      "TariffResponse": {
        "type": "object",
        "properties": {
          "tariff": {
            "$ref": "#/components/schemas/Tariff"
          }
        },
        "additionalProperties": false
      },
      "TariffsSearchRequest": {
        "type": "object",
        "properties": {
          "meteringPointIds": {
            "type": "array",
            "description": "List of MPIDs you are the registered owner of as a private person or your company has e legal reason to request in a customer/provider relationship.",
            "items": {
              "$ref": "#/components/schemas/MeteringPointId"
            }
          }
        },
        "additionalProperties": false
      },
      "TariffsSearchResponse": {
        "type": "object",
        "properties": {
          "tariffs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tariff"
            }
          },
          "mappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TariffMapping"
            }
          }
        },
        "additionalProperties": false
      },
      "PricesResponse": {
        "type": "object",
        "properties": {
          "componentPrices": {
            "$ref": "#/components/schemas/ComponentPrices"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32",
            "description": "HTTP status code of the error."
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable summary of the problem."
          },
          "detail": {
            "type": "string",
            "description": "A detailed message explaining the error."
          },
          "instance": {
            "type": "string",
            "description": "URI reference identifying the specific occurrence of the problem."
          },
          "type": {
            "type": "string",
            "description": "A URI reference that identifies the problem type."
          }
        },
        "required": [
          "status",
          "title",
          "detail"
        ],
        "additionalProperties": false
      },
      "Uuid": {
        "type": "string",
        "format": "uuid",
        "description": "Globally unique identifier",
        "example": "216783ff-5dda-4c38-b491-d6f0fcee9a9b",
        "additionalProperties": false
      },
      "DateInterval": {
        "type": "object",
        "description": "A date interval to define a validity period for an object.",
        "properties": {
          "fromIncluding": {
            "description": "From and including this date.",
            "type": "string",
            "format": "date",
            "example": "2024-10-01"
          },
          "toExcluding": {
            "description": "To but excluding this date.",
            "type": "string",
            "format": "date",
            "example": "2025-04-01"
          }
        },
        "additionalProperties": false
      },
      "Duration": {
        "description": "A time duration in the format [ISO 8601 duration format](https://en.wikipedia.org/wiki/ISO_8601#Durations).\nExamples:\n- \"P1D\" for one day\n- \"P1M\" for one month\n- \"P2W\" for two weeks\n- \"P3Y6M4DT12H30M5S\" for a complex duration.",
        "type": "string",
        "format": "duration",
        "examples": [
          "PT0S",
          "PT15M",
          "PT1H",
          "P1D",
          "P1W",
          "P1M",
          "P1DT12H"
        ],
        "additionalProperties": false
      },
      "Name": {
        "type": "string",
        "description": "A short human readable name.",
        "example": "Fusesize 25A",
        "additionalProperties": false
      },
      "Description": {
        "description": "A longer explanatory text.",
        "type": "string",
        "example": "Fixed price for a contract with a fuse size of 25 A.",
        "additionalProperties": false
      },
      "CostFunction": {
        "description": "A pseudo code function that describes how to calculate the cost for a set of price components. Usage examples at https://someexamples.",
        "type": "string",
        "examples": [
          "sum(price(c))",
          "sum(energy(c)*price(c))",
          "sum(peak(c)*price(c))"
        ],
        "additionalProperties": false
      },
      "Currency": {
        "description": "The currency for all related prices.",
        "type": "string",
        "example": "SEK",
        "additionalProperties": false
      },
      "Price": {
        "description": "Price, VAT and currency.",
        "type": "object",
        "properties": {
          "priceExVat": {
            "type": "number",
            "examples": [
              171.32,
              154
            ]
          },
          "priceIncVat": {
            "type": "number",
            "examples": [
              171.32,
              154
            ]
          },
          "currency": {
            "$ref": "#/components/schemas/Currency",
            "example": "SEK"
          }
        },
        "additionalProperties": false
      },
      "FixedPriceComponent": {
        "description": "A time period in which price details are defined. Price components can be overlapping in time to define the full price for one time period.",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Uuid"
          },
          "name": {
            "$ref": "#/components/schemas/Name",
            "example": "Subscription cost"
          },
          "description": {
            "$ref": "#/components/schemas/Description",
            "example": "The subscription component of the fixed price part."
          },
          "type": {
            "description": "Type describes if the price component is a publicly available price or customer specific.",
            "type": "string",
            "pattern": "public|specific",
            "examples": [
              "public",
              "specific"
            ],
            "default": "fixed"
          },
          "reference": {
            "description": "Reference to be used to identify this recurring price period in the cost function.",
            "type": "string",
            "examples": [
              "main",
              "pubclic",
              "specific"
            ],
            "default": "main"
          },
          "validPeriod": {
            "$ref": "#/components/schemas/DateInterval"
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "pricedPeriod": {
            "description": "The time period that is priced in the price property.",
            "$ref": "#/components/schemas/Duration",
            "examples": [
              "P1M",
              "P1Y"
            ],
            "default": "P1M"
          }
        },
        "additionalProperties": false
      },
      "FixedPrice": {
        "description": "Prices and information for the fixed price component of the tariff.",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Uuid"
          },
          "name": {
            "$ref": "#/components/schemas/Name",
            "example": "Fusesize 25 A"
          },
          "description": {
            "$ref": "#/components/schemas/Description",
            "example": "Fixed price for a contract with a fuse size of 25 A."
          },
          "costFunction": {
            "$ref": "#/components/schemas/CostFunction",
            "default": "sum(price(c))"
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FixedPriceComponent"
            }
          }
        },
        "additionalProperties": false
      },
      "Unit": {
        "description": "The unit of a measurement or price calculation.",
        "type": "string",
        "examples": [
          "kWh",
          "kW"
        ],
        "additionalProperties": false
      },
      "SpotPriceSettings": {
        "description": "Settings for a spot price relative pricing component.",
        "type": "object",
        "properties": {
          "multiplier": {
            "description": "A number used to multiply the electricity markets spot price to get a price for this price component.",
            "type": "number",
            "examples": [
              0.0005,
              0
            ]
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          }
        },
        "additionalProperties": false
      },
      "CalendarPatternReferences": {
        "type": "object",
        "description": "A collection of calendar patterns that defines which days and/or dates to use for an active period.",
        "properties": {
          "include": {
            "description": "A list of calendar patterns to be included in the active period.",
            "type": "array",
            "items": {
              "type": "string",
              "examples": [
                "weekday",
                "weekend",
                "holiday"
              ]
            }
          },
          "exclude": {
            "description": "A list of calendar patterns to be excluded from an active period.",
            "type": "array",
            "items": {
              "type": "string",
              "examples": [
                "weekday",
                "weekend",
                "holiday"
              ]
            }
          }
        },
        "additionalProperties": false
      },
      "ActivePeriod": {
        "type": "object",
        "description": "A time interval where \"fromIncluding\" is included and the interval is up to, but excluding \"toExcluding\".",
        "properties": {
          "fromIncluding": {
            "description": "From and including this timestamp.",
            "type": "string",
            "format": "time",
            "example": "00:00:00"
          },
          "toExcluding": {
            "description": "To but excluding this timestamp.",
            "type": "string",
            "format": "time",
            "example": "01:00:00"
          },
          "calendarPatternReferences": {
            "$ref": "#/components/schemas/CalendarPatternReferences"
          }
        },
        "additionalProperties": false
      },
      "RecurringPeriod": {
        "description": "A short period of time that recurs several times during a season or other long time period.",
        "type": "object",
        "properties": {
          "reference": {
            "description": "Reference to be used to identify this recurring period in a function.",
            "type": "string",
            "examples": [
              "main",
              "high",
              "low"
            ],
            "default": "main"
          },
          "frequency": {
            "$ref": "#/components/schemas/Duration",
            "example": "P1D",
            "default": "P1D"
          },
          "activePeriods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivePeriod"
            }
          }
        },
        "additionalProperties": false
      },
      "EnergyPriceComponent": {
        "description": "A time period in which price details are defined. Price components can be overlapping in time to define the full price for one time period.",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Uuid"
          },
          "name": {
            "$ref": "#/components/schemas/Name",
            "example": "Winter day high price"
          },
          "description": {
            "$ref": "#/components/schemas/Description",
            "example": "A recurring time interval every day with a high price during day time."
          },
          "type": {
            "type": "string",
            "pattern": "fixed|spot",
            "examples": [
              "fixed",
              "spot"
            ],
            "default": "fixed"
          },
          "reference": {
            "description": "Reference to be used to identify this recurring price period in the cost function.",
            "type": "string",
            "examples": [
              "main",
              "high",
              "low",
              "fixed",
              "spot",
              "tax"
            ],
            "default": "main"
          },
          "price": {
            "$ref": "#/components/schemas/Price",
            "nullable": true
          },
          "spotPriceSettings": {
            "$ref": "#/components/schemas/SpotPriceSettings",
            "nullable": true
          },
          "validPeriod": {
            "$ref": "#/components/schemas/DateInterval"
          },
          "recurringPeriods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecurringPeriod"
            }
          }
        },
        "additionalProperties": false
      },
      "EnergyPrice": {
        "description": "Prices and information for the energy price component of the tariff.",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Uuid"
          },
          "name": {
            "$ref": "#/components/schemas/Name",
            "example": "Energy transfer"
          },
          "description": {
            "$ref": "#/components/schemas/Description",
            "example": "Energy transfer price for one kWh."
          },
          "costFunction": {
            "$ref": "#/components/schemas/CostFunction",
            "default": "sum(energy(c)*price(c))"
          },
          "unit": {
            "$ref": "#/components/schemas/Unit",
            "example": "kWh",
            "default": "kWh"
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnergyPriceComponent"
            }
          }
        },
        "additionalProperties": false
      },
      "PeakFunction": {
        "description": "A pseudo code function that describes how to identify a power peak for one power price component. Usage examples at https://someexamples.",
        "type": "string",
        "examples": [
          "peak(main)",
          "max(peak(high),peak(low)/2)"
        ],
        "default": "peak(main)",
        "additionalProperties": false
      },
      "PeakIdentificationSettings": {
        "description": "Settings that defines how to identify a power peak during a billing period.",
        "type": "object",
        "properties": {
          "peakFunction": {
            "$ref": "#/components/schemas/PeakFunction"
          },
          "peakIdentificationPeriod": {
            "description": "The time period as an ISO 8601 duration for identifying one single peak to be used in calculations. For example only one peak per day is saved => \"P1D\".",
            "$ref": "#/components/schemas/Duration",
            "examples": [
              "P1D",
              "P1W"
            ],
            "default": "P1D"
          },
          "peakDuration": {
            "description": "The time length as an ISO 8601 duration for calculating average power to get one peak.",
            "$ref": "#/components/schemas/Duration",
            "examples": [
              "PT1H",
              "PT15M"
            ],
            "default": "PT1H"
          },
          "numberOfPeaksForAverageCalculation": {
            "description": "The number of peaks within a peak pricing period for calculating average peak for that period.",
            "type": "integer",
            "example": 3
          }
        },
        "additionalProperties": false
      },
      "PowerPriceComponent": {
        "description": "A time period in which pricing and power peak identification details are defined. Price components can be overlapping in time to define the full price for one time period.",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Uuid"
          },
          "name": {
            "$ref": "#/components/schemas/Name",
            "example": "Winter day high price"
          },
          "description": {
            "$ref": "#/components/schemas/Description",
            "example": "A recurring time interval every day with a high power price during day time."
          },
          "type": {
            "type": "string",
            "pattern": "peak|dynamic",
            "examples": [
              "peak",
              "dynamic"
            ],
            "default": "peak"
          },
          "reference": {
            "description": "Reference to be used to identify this recurring price period in the cost function.",
            "type": "string",
            "examples": [
              "main",
              "high",
              "low"
            ],
            "default": "main"
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          },
          "validPeriod": {
            "$ref": "#/components/schemas/DateInterval"
          },
          "peakIdentificationSettings": {
            "$ref": "#/components/schemas/PeakIdentificationSettings"
          },
          "recurringPeriods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecurringPeriod"
            }
          }
        },
        "additionalProperties": false
      },
      "PowerPrice": {
        "description": "Prices with parameters that defines power peak identification and price calculation for the power component of the tariff.",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Uuid"
          },
          "name": {
            "$ref": "#/components/schemas/Name",
            "example": "Energy transfer"
          },
          "description": {
            "$ref": "#/components/schemas/Description",
            "example": "Energy transfer price for one kWh."
          },
          "costFunction": {
            "$ref": "#/components/schemas/CostFunction",
            "default": "sum(peak(c)*price(c))"
          },
          "unit": {
            "$ref": "#/components/schemas/Unit",
            "example": "kW",
            "default": "kW"
          },
          "components": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PowerPriceComponent"
            }
          }
        },
        "additionalProperties": false
      },
      "Tariff": {
        "description": "Information about the tariff that are static and does not change during at least a month.",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Uuid"
          },
          "name": {
            "description": "Descriptive short name of the grid tariff.",
            "type": "string"
          },
          "description": {
            "description": "Detailed description of the grid tariff.",
            "type": "string"
          },
          "product": {
            "description": "Name of the grid company product, for grid company internal use.",
            "type": "string"
          },
          "companyName": {
            "description": "Name of the grid company.",
            "type": "string"
          },
          "companyOrgNo": {
            "description": "Organization number of the grid company.",
            "type": "string"
          },
          "direction": {
            "description": "Indicates if this is a tariff for consumption or production. Valid values are \"consumption\" and \"production\".",
            "type": "string",
            "pattern": "consumption|production",
            "default": "consumption"
          },
          "timeZone": {
            "type": "string",
            "description": "Time zone for all time values in this tariff. From the IANA Time Zone Database (e.g., 'Europe/Stockholm').",
            "example": "Europe/Stockholm"
          },
          "lastUpdated": {
            "description": "The time of when the prices were last updated on the server side. No need to get prices if you already fetched the latest ones? Ex. 2021-11-05T00:00:00+01:00",
            "type": "string",
            "format": "date-time"
          },
          "validPeriod": {
            "$ref": "#/components/schemas/DateInterval"
          },
          "billingPeriod": {
            "description": "A time period that describes how often the customer is billed. E.g. \"P1M\" means billing is made at every new month.",
            "$ref": "#/components/schemas/Duration",
            "example": "P1M",
            "default": "P1M"
          },
          "fixedPrice": {
            "$ref": "#/components/schemas/FixedPrice"
          },
          "energyPrice": {
            "$ref": "#/components/schemas/EnergyPrice"
          },
          "powerPrice": {
            "$ref": "#/components/schemas/PowerPrice"
          }
        },
        "additionalProperties": false
      },
      "CalendarPattern": {
        "type": "object",
        "description": "A pattern of calendar events.",
        "properties": {
          "name": {
            "type": "string",
            "examples": [
              "weekday",
              "weekend",
              "holiday"
            ]
          },
          "frequency": {
            "type": "string",
            "examples": [
              "P1W",
              "P1Y"
            ],
            "$ref": "#/components/schemas/Duration"
          },
          "days": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "dates": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date",
              "example": "2024-10-01"
            }
          }
        },
        "additionalProperties": false
      },
      "MeteringPointId": {
        "type": "string",
        "description": "Identifier for a physical metering point (MPID)",
        "example": "735999000000000001",
        "additionalProperties": false
      },
      "TariffMapping": {
        "type": "object",
        "properties": {
          "tariffId": {
            "$ref": "#/components/schemas/Uuid"
          },
          "meteringPointIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeteringPointId"
            }
          }
        },
        "additionalProperties": false
      },
      "DateTimeInterval": {
        "type": "object",
        "description": "A datetime interval where fromIncluding is included and the interval is up until toExcluding.",
        "properties": {
          "fromIncluding": {
            "description": "From and including this timestamp.",
            "type": "string",
            "format": "date-time",
            "example": "2024-09-17T00:00:00+01:00"
          },
          "toExcluding": {
            "description": "To but excluding this timestamp.",
            "type": "string",
            "format": "date-time",
            "example": "204-09-17T01:00:00+01:00"
          }
        },
        "additionalProperties": false
      },
      "PricePeriod": {
        "description": "A consecutive time period with one price.",
        "type": "object",
        "properties": {
          "validPeriod": {
            "description": "The time period during this price is valid.",
            "$ref": "#/components/schemas/DateTimeInterval"
          },
          "price": {
            "$ref": "#/components/schemas/Price"
          }
        },
        "additionalProperties": false
      },
      "ComponentPrices": {
        "description": "Time differentiated prices for a price component.",
        "type": "object",
        "properties": {
          "componentId": {
            "description": "Unique id for the price component for which the prices belong to.",
            "$ref": "#/components/schemas/Uuid"
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricePeriod"
            }
          }
        },
        "additionalProperties": false
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "example": {
              "status": 400,
              "title": "Bad Request",
              "detail": "The request object is invalid.",
              "instance": "/v0/endpoint"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "example": {
              "status": 401,
              "title": "Unauthorized",
              "detail": "You do not have access to make this request.",
              "instance": "/v0/endpoint"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "example": {
              "status": 403,
              "title": "Forbidden",
              "detail": "The request you made is not allowed.",
              "instance": "/v0/endpoint"
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "example": {
              "status": 404,
              "title": "Not Found",
              "detail": "The requested resource could not be found.",
              "instance": "/v0/endpoint"
            }
          }
        }
      },
      "NotImplemented": {
        "description": "Not Implemented",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemDetails"
            },
            "example": {
              "status": 501,
              "title": "Not Implemented",
              "detail": "The request method is not yet implemented on this server.",
              "instance": "/v0/endpoint"
            }
          }
        }
      }
    }
  }
}